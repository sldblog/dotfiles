#!/bin/bash

DOTFILES="$(cd "$(dirname "$0")"/.. && pwd)"
UNAME="$(uname)"

function msg_progress() {
  echo -e "\n\033[33mðŸ•µ $1\033[0m"
}

function msg_done() {
  echo -e "\n\033[32mâœ³ Done!\033[0m"
}

function install_zsh() {
  msg_progress "Installing oh-my-zsh."

  git clone git@github.com:robbyrussell/oh-my-zsh.git "$HOME"/.oh-my-zsh
  (cd "$HOME"/.oh-my-zsh || git pull --ff-only)
}

function symlink_files() {
  msg_progress "Linking files."

  for file in .zshenv .zshrc; do
    ln -svf "$DOTFILES/zsh/$file" "$HOME/$file"
  done

  for file in .gemrc .vimrc .iex.exs; do
    ln -svf "$DOTFILES/configuration/$file" "$HOME/$file"
  done

  mkdir -p "$HOME"/.gnupg && chmod 700 "$HOME"/.gnupg
  ln -svf "$DOTFILES/configuration/gpg-agent.conf" "$HOME/.gnupg/gpg-agent.conf"
}

function install_dependencies() {
  if [ "$UNAME" = "Linux" ]; then
    msg_progress "Installing Pacman dependencies. May ask for sudo password."
    packages=$(tr '\n' ' ' <"$DOTFILES"/Pacmanfile)
    sudo pacman --sync --refresh
    sudo pacman --sync --needed --noconfirm "$packages"
  fi

  if [ "$UNAME" = "Darwin" ]; then
    msg_progress "Installing Brew dependencies."
    brew --version || /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    brew bundle check --file="$DOTFILES"/Brewfile &>/dev/null || brew bundle --file="$DOTFILES"/Brewfile

    msg_progress "Installing App Store dependencies."
    mas install 462058435 # Excel
    mas install 462054704 # Word
    mas install 784801555 # OneNote
    mas install 823766827 # OneDrive
    mas install 1274495053 # ToDo
    mas install 803453959 # Slack
    mas install 1118136179 # AutoMute
    mas install 1423210932 # Flow (Pomodoro timer)
  fi

  msg_progress "Installing Pip dependencies."
  python3 -m pip install --upgrade pip
  pip3 install --upgrade --requirement "$DOTFILES"/Pipfile
}

function download_installers() {
  if [ "$UNAME" = "Darwin" ]; then
    output_dir="$HOME/Downloads/Installers"
    mkdir -p "$output_dir"

    msg_progress "Downloading Mac installers to $output_dir."
    for link in \
      "https://download-mac.grammarly.com/Grammarly.dmg" \
      "https://download.jetbrains.com/toolbox/jetbrains-toolbox-1.27.3.14493.dmg" \
      "https://downloads.1password.com/mac/1Password.zip" \
      "https://github.com/rxhanson/Rectangle/releases/download/v0.66/Rectangle0.66.dmg" \
    ; do
      curl --location --silent --show-error --remote-name \
        --continue-at - \
        "$link" \
        --output-dir "$output_dir"
    done
  fi
}

function apply_java_config() {
  msg_progress "Checking Java version."
  if java -version 2>&1 | grep 'version "11.'; then
    return
  fi

  if [ "$UNAME" = "Linux" ]; then
    msg_progress "Configuring default Java, may ask for sudo password."
    sudo archlinux-java set java-11-openjdk
  fi
}

function apply_time_config() {
  if [ "$UNAME" = "Linux" ]; then
    msg_progress "Configuring NTP service, may ask for sudo password."

    if ! timedatectl status | grep "NTP service: active"; then
      sudo timedatectl set-ntp true
      echo "NTP set to active."
    fi
  fi
}

function apply_git_config() {
  msg_progress "Applying git configuration."

  git config --global user.email "david.lantos@gmail.com"
  git config --global user.name "David Lantos"

  git config --global user.signingkey "0x46744D6E3CC64734"
  git config --global commit.gpgsign "true"

  git config --global core.excludesfile "$DOTFILES/configuration/.gitignore"
  git config --global push.default "simple"

  git config --global mergetool.keepBackup "false"

  if [ "$UNAME" = "Darwin" ]; then
    git config --global merge.tool "p4merge"
    git config --global diff.tool "p4merge"
    git config --global mergetool.p4merge.path "/Applications/p4merge.app/Contents/MacOS/p4merge"
  fi

  git config --global alias.rl "reflog --date=iso"
  git config --global alias.ll "log --graph --pretty=format:'%C(yellow)%h%Creset -%C(green)%d%Creset %s %Cblue(%cr - %cd) %C(bold blue)<%ae>%Creset' --abbrev-commit"

  git lfs install
}

function install_zsh_addons() {
  msg_progress "Installing zsh addons."

  theme_file="$HOME/.oh-my-zsh/custom/themes/bullet-train.zsh-theme"
  rm -f "$theme_file"
  curl --silent https://raw.githubusercontent.com/caiogondim/bullet-train-oh-my-zsh-theme/master/bullet-train.zsh-theme \
    -o "$theme_file" && echo "zsh theme $(basename "$theme_file") installed"
}

function install_vim_addons() {
  msg_progress "Installing vim addons."

  mkdir -p "$HOME"/.vim/bundle/
  git clone https://github.com/VundleVim/Vundle.vim.git "$HOME"/.vim/bundle/Vundle.vim
  (cd "$HOME"/.vim/bundle/Vundle.vim || git pull --ff-only)
  vim +PluginInstall +qall && echo "vim plugins installed"
}

install_zsh
symlink_files
install_dependencies
install_vim_addons
install_zsh_addons
download_installers
apply_time_config
apply_java_config
apply_git_config

msg_done
